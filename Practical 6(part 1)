#include <iostream>
#include <vector>

// Recursive binary search function
int binarySearchRecursive(const std::vector<int>& arr, int left, int right, int target) {
    if (left > right) {
        return -1; // Element is not present in the array
    }

    int mid = left + (right - left) / 2;

    if (arr[mid] == target) {
        return mid; // Element found
    } else if (arr[mid] > target) {
        return binarySearchRecursive(arr, left, mid - 1, target); // Search in the left half
    } else {
        return binarySearchRecursive(arr, mid + 1, right, target); // Search in the right half
    }
}

int main() {
    std::vector<int> arr = {2, 3, 4, 10, 40};
    int target = 10;
    int n = arr.size();

    int result = binarySearchRecursive(arr, 0, n - 1, target);
    if (result != -1) {
        std::cout << "Element found at index " << result << std::endl;
    } else {
        std::cout << "Element not found in the array" << std::endl;
    }

    return 0;
}
