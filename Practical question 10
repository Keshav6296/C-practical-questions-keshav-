#include <iostream> using namespace std;

// Base class class Person { protected: string name; public: Person(string n) : name(n) {} virtual void display() const { cout << "Name: " << name << endl; } virtual ~Person() {} };

// Derived class Student class Student : public Person { private: string course; int marks; int year; public: Student(string n, string c, int m, int y) : Person(n), course(c), marks(m), year(y) {} void display() const override { cout << "Student Details:\n"; Person::display(); cout << "Course: " << course << "\nMarks: " << marks << "\nYear: " << year << endl; } };

// Derived class Employee class Employee : public Person { private: string department; double salary; public: Employee(string n, string d, double s) : Person(n), department(d), salary(s) {} void display() const override { cout << "Employee Details:\n"; Person::display(); cout << "Department: " << department << "\nSalary: " << salary << endl; } };

int main() { Person *p1 = new Student("Alice", "Computer Science", 85, 2023); Person *p2 = new Employee("Bob", "HR", 50000);

p1->display();
cout << endl;
p2->display();

delete p1;
delete p2;
return 0;

}

